{"status": "ok", "result": {"output": " --- OK.\n Match tree built with 27 nodes.\n\nPDDL problem description loaded: \n\tDomain: RUNESCAPE\n\tProblem: MAKESWORD\n\t#Actions: 27\n\t#Fluents: 17\nLandmarks found: 1\nStarting search with IW (time budget is 60 secs)...\nrel_plan size: 8\n#RP_fluents 9\nCaption\n{#goals, #UNnachieved,  #Achieved} -> IW(max_w)\n\n{1/1/0}:IW(1) -> [2][3][4][5][6][7][8][9];; NOT I-REACHABLE ;;\nTotal time: -1.04308e-10\nNodes generated during search: 42\nNodes expanded during search: 42\nIW search completed\nStarting search with BFS(novel,land,h_add)...\n--[4294967295 / 8]--\n--[1 / 8]--\n--[1 / 7]--\n--[1 / 6]--\n--[1 / 5]--\n--[1 / 4]--\n--[1 / 3]--\n--[1 / 2]--\n--[1 / 1]--\n--[1 / 0]--\n--[0 / 0]--\nTotal time: -1.04308e-10\nNodes generated during search: 85\nNodes expanded during search: 18\nPlan found with cost: 10\nBFS search completed\n", "parse_status": "ok", "type": "full", "length": 10, "plan": [{"action": "  (:action equip\n    :parameters (player pickaxe shed)\n    :precondition\n      (and\n        (at player shed)\n        (forall (?t - tool)\n          (not\n            (equipped player ?t)\n          )\n        )\n      )\n    :effect\n      (and\n        (equipped player pickaxe)\n      )\n  )", "name": "(equip player pickaxe shed)"}, {"action": "  (:action move-to\n    :parameters (player shed mine)\n    :precondition\n      (and\n        (at player shed)\n        (not\n          (at player mine)\n        )\n        (not\n          (= shed mine)\n        )\n      )\n    :effect\n      (and\n        (at player mine)\n        (not\n          (at player shed)\n        )\n      )\n  )", "name": "(move-to player shed mine)"}, {"action": "  (:action mine-rocks\n    :parameters (player mine pickaxe ore)\n    :precondition\n      (and\n        (at player mine)\n        (equipped player pickaxe)\n      )\n    :effect\n      (and\n        (has player ore)\n      )\n  )", "name": "(mine-rocks player mine pickaxe ore)"}, {"action": "  (:action move-to\n    :parameters (player mine shed)\n    :precondition\n      (and\n        (at player mine)\n        (not\n          (at player shed)\n        )\n        (not\n          (= mine shed)\n        )\n      )\n    :effect\n      (and\n        (at player shed)\n        (not\n          (at player mine)\n        )\n      )\n  )", "name": "(move-to player mine shed)"}, {"action": "  (:action store\n    :parameters (player pickaxe shed)\n    :precondition\n      (and\n        (at player shed)\n        (equipped player pickaxe)\n      )\n    :effect\n      (and\n        (not\n          (equipped player pickaxe)\n        )\n      )\n  )", "name": "(store player pickaxe shed)"}, {"action": "  (:action equip\n    :parameters (player hammer shed)\n    :precondition\n      (and\n        (at player shed)\n        (forall (?t - tool)\n          (not\n            (equipped player ?t)\n          )\n        )\n      )\n    :effect\n      (and\n        (equipped player hammer)\n      )\n  )", "name": "(equip player hammer shed)"}, {"action": "  (:action move-to\n    :parameters (player shed furnace)\n    :precondition\n      (and\n        (at player shed)\n        (not\n          (at player furnace)\n        )\n        (not\n          (= shed furnace)\n        )\n      )\n    :effect\n      (and\n        (at player furnace)\n        (not\n          (at player shed)\n        )\n      )\n  )", "name": "(move-to player shed furnace)"}, {"action": "  (:action smelt-ore\n    :parameters (player furnace ore bars)\n    :precondition\n      (and\n        (at player furnace)\n        (has player ore)\n      )\n    :effect\n      (and\n        (has player bars)\n        (not\n          (has player ore)\n        )\n      )\n  )", "name": "(smelt-ore player furnace ore bars)"}, {"action": "  (:action move-to\n    :parameters (player furnace anvil)\n    :precondition\n      (and\n        (at player furnace)\n        (not\n          (at player anvil)\n        )\n        (not\n          (= furnace anvil)\n        )\n      )\n    :effect\n      (and\n        (at player anvil)\n        (not\n          (at player furnace)\n        )\n      )\n  )", "name": "(move-to player furnace anvil)"}, {"action": "  (:action smithe-bars\n    :parameters (player anvil hammer bars)\n    :precondition\n      (and\n        (at player anvil)\n        (has player bars)\n        (equipped player hammer)\n      )\n    :effect\n      (and\n        (has_sword player)\n      )\n  )", "name": "(smithe-bars player anvil hammer bars)"}], "planPath": "/tmp/solver_planning_domains_tmp_2YOsJoeGfFwxF/plan", "logPath": "/tmp/solver_planning_domains_tmp_2YOsJoeGfFwxF/log"}}