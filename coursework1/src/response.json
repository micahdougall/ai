{"status": "ok", "result": {"output": " --- OK.\n Match tree built with 27 nodes.\n\nPDDL problem description loaded: \n\tDomain: RUNESCAPE\n\tProblem: MAKESWORD\n\t#Actions: 27\n\t#Fluents: 18\nLandmarks found: 1\nStarting search with IW (time budget is 60 secs)...\nrel_plan size: 8\n#RP_fluents 9\nCaption\n{#goals, #UNnachieved,  #Achieved} -> IW(max_w)\n\n{1/1/0}:IW(1) -> [2][3][4][5][6][7][8][9];; NOT I-REACHABLE ;;\nTotal time: -1.8999e-10\nNodes generated during search: 40\nNodes expanded during search: 40\nIW search completed\nStarting search with BFS(novel,land,h_add)...\n--[4294967295 / 8]--\n--[1 / 8]--\n--[1 / 7]--\n--[1 / 6]--\n--[1 / 5]--\n--[1 / 4]--\n--[1 / 3]--\n--[1 / 2]--\n--[1 / 1]--\n--[1 / 0]--\n--[0 / 0]--\nTotal time: -1.8999e-10\nNodes generated during search: 84\nNodes expanded during search: 18\nPlan found with cost: 10\nBFS search completed\n", "parse_status": "ok", "type": "full", "length": 10, "plan": [{"action": "  (:action equip\n    :parameters (p1 pa shed)\n    :precondition\n      (and\n        (at p1 shed)\n        (forall (?x - tool)\n          (not\n            (equipped p1 ?x)\n          )\n        )\n      )\n    :effect\n      (and\n        (equipped p1 pa)\n      )\n  )", "name": "(equip p1 pa shed)"}, {"action": "  (:action move-to\n    :parameters (p1 shed m1)\n    :precondition\n      (and\n        (at p1 shed)\n        (not\n          (at p1 m1)\n        )\n        (not\n          (= shed m1)\n        )\n      )\n    :effect\n      (and\n        (at p1 m1)\n        (not\n          (at p1 shed)\n        )\n      )\n  )", "name": "(move-to p1 shed m1)"}, {"action": "  (:action mine-rocks\n    :parameters (p1 m1 pa)\n    :precondition\n      (and\n        (at p1 m1)\n        (has_rock p1)\n        (equipped p1 pa)\n      )\n    :effect\n      (and\n        (has_ore p1)\n        (not\n          (has_rock p1)\n        )\n      )\n  )", "name": "(mine-rocks p1 m1 pa)"}, {"action": "  (:action move-to\n    :parameters (p1 m1 shed)\n    :precondition\n      (and\n        (at p1 m1)\n        (not\n          (at p1 shed)\n        )\n        (not\n          (= m1 shed)\n        )\n      )\n    :effect\n      (and\n        (at p1 shed)\n        (not\n          (at p1 m1)\n        )\n      )\n  )", "name": "(move-to p1 m1 shed)"}, {"action": "  (:action sheath\n    :parameters (p1 pa shed)\n    :precondition\n      (and\n        (at p1 shed)\n        (equipped p1 pa)\n      )\n    :effect\n      (and\n        (not\n          (equipped p1 pa)\n        )\n      )\n  )", "name": "(sheath p1 pa shed)"}, {"action": "  (:action equip\n    :parameters (p1 h1 shed)\n    :precondition\n      (and\n        (at p1 shed)\n        (forall (?x - tool)\n          (not\n            (equipped p1 ?x)\n          )\n        )\n      )\n    :effect\n      (and\n        (equipped p1 h1)\n      )\n  )", "name": "(equip p1 h1 shed)"}, {"action": "  (:action move-to\n    :parameters (p1 shed f1)\n    :precondition\n      (and\n        (at p1 shed)\n        (not\n          (at p1 f1)\n        )\n        (not\n          (= shed f1)\n        )\n      )\n    :effect\n      (and\n        (at p1 f1)\n        (not\n          (at p1 shed)\n        )\n      )\n  )", "name": "(move-to p1 shed f1)"}, {"action": "  (:action smelt-ore\n    :parameters (p1 f1)\n    :precondition\n      (and\n        (at p1 f1)\n        (has_ore p1)\n      )\n    :effect\n      (and\n        (has_smithable_bars p1)\n        (not\n          (has_ore p1)\n        )\n      )\n  )", "name": "(smelt-ore p1 f1)"}, {"action": "  (:action move-to\n    :parameters (p1 f1 a1)\n    :precondition\n      (and\n        (at p1 f1)\n        (not\n          (at p1 a1)\n        )\n        (not\n          (= f1 a1)\n        )\n      )\n    :effect\n      (and\n        (at p1 a1)\n        (not\n          (at p1 f1)\n        )\n      )\n  )", "name": "(move-to p1 f1 a1)"}, {"action": "  (:action smith-bars\n    :parameters (p1 a1 h1)\n    :precondition\n      (and\n        (at p1 a1)\n        (has_smithable_bars p1)\n        (equipped p1 h1)\n      )\n    :effect\n      (and\n        (has_sword p1)\n      )\n  )", "name": "(smith-bars p1 a1 h1)"}], "planPath": "/tmp/solver_planning_domains_tmp_27RFGREqUSQNz/plan", "logPath": "/tmp/solver_planning_domains_tmp_27RFGREqUSQNz/log"}}