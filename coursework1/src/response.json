{"status": "ok", "result": {"output": "\n\ntask contains conditional effects. turning off state domination.\n\n --- OK.\n Match tree built with 61 nodes.\n\nPDDL problem description loaded: \n\tDomain: RUNESCAPE\n\tProblem: MAKESWORD\n\t#Actions: 61\n\t#Fluents: 51\nLandmarks found: 12\nStarting search with IW (time budget is 60 secs)...\nrel_plan size: 17\n#RP_fluents 26\nCaption\n{#goals, #UNnachieved,  #Achieved} -> IW(max_w)\n\n{12/12/0}:IW(1) -> rel_plan size: 17\n#RP_fluents 26\n{12/1/11}:IW(1) -> [2][3][4][5][6][7][8][9][10][11][12][13][14][15][16][17][18][19][20][21][22][23][24];; NOT I-REACHABLE ;;\nTotal time: 4.47035e-10\nNodes generated during search: 225\nNodes expanded during search: 224\nIW search completed\nStarting search with BFS(novel,land,h_add)...\n--[4294967295 / 185]--\n--[1 / 185]--\n--[1 / 178]--\n--[1 / 176]--\n--[1 / 146]--\n--[1 / 97]--\n--[1 / 73]--\n--[1 / 54]--\n--[1 / 37]--\n--[1 / 30]--\n--[1 / 29]--\n--[1 / 26]--\n--[1 / 22]--\n--[1 / 20]--\n--[1 / 19]--\n--[1 / 11]--\n--[1 / 7]--\n--[1 / 6]--\n--[1 / 4]--\n--[1 / 2]--\n--[1 / 0]--\nTotal time: 0.012\nNodes generated during search: 1009\nNodes expanded during search: 117\nPlan found with cost: 31\nBFS search completed\n", "parse_status": "ok", "type": "full", "length": 31, "plan": [{"action": "  (:action hunt-chicken\n    :parameters (player farm chickens feathers)\n    :precondition\n      (and\n        (has farm chickens)\n      )\n    :effect\n      (and\n        (has player feathers)\n      )\n  )", "name": "(hunt-chicken player farm chickens feathers)"}, {"action": "  (:action affix\n    :parameters (player arrow feathers)\n    :precondition\n      (and\n        (has player feathers)\n      )\n    :effect\n      (and\n        (includes arrow feathers)\n        (not\n          (has player feathers)\n        )\n        (when\n          (and\n            (exists ?a includes)\n            (exists ?f includes)\n            (exists ?s includes)\n          )\n          (and\n            (has player arrow)\n          )\n        )\n      )\n  )", "name": "(affix player arrow feathers)"}, {"action": "  (:action hunt-chicken\n    :parameters (player farm chickens feathers)\n    :precondition\n      (and\n        (has farm chickens)\n      )\n    :effect\n      (and\n        (has player feathers)\n      )\n  )", "name": "(hunt-chicken player farm chickens feathers)"}, {"action": "  (:action store\n    :parameters (player feathers shed)\n    :precondition\n      (and\n        (at player shed)\n        (has player feathers)\n      )\n    :effect\n      (and\n        (has shed feathers)\n        (not\n          (has player feathers)\n        )\n      )\n  )", "name": "(store player feathers shed)"}, {"action": "  (:action hunt-chicken\n    :parameters (player farm chickens feathers)\n    :precondition\n      (and\n        (has farm chickens)\n      )\n    :effect\n      (and\n        (has player feathers)\n      )\n  )", "name": "(hunt-chicken player farm chickens feathers)"}, {"action": "  (:action equip\n    :parameters (player pickaxe shed)\n    :precondition\n      (and\n        (at player shed)\n        (forall (?t - tool)\n          (not\n            (has player ?t)\n          )\n        )\n        (has shed pickaxe)\n      )\n    :effect\n      (and\n        (has player pickaxe)\n      )\n  )", "name": "(equip player pickaxe shed)"}, {"action": "  (:action move-to\n    :parameters (player shed mine)\n    :precondition\n      (and\n        (at player shed)\n        (not\n          (at player mine)\n        )\n        (not\n          (= shed mine)\n        )\n      )\n    :effect\n      (and\n        (at player mine)\n        (not\n          (at player shed)\n        )\n      )\n  )", "name": "(move-to player shed mine)"}, {"action": "  (:action mine-rocks\n    :parameters (player mine pickaxe rock ore)\n    :precondition\n      (and\n        (at player mine)\n        (has player pickaxe)\n        (has mine rock)\n      )\n    :effect\n      (and\n        (has player ore)\n      )\n  )", "name": "(mine-rocks player mine pickaxe rock ore)"}, {"action": "  (:action move-to\n    :parameters (player mine shed)\n    :precondition\n      (and\n        (at player mine)\n        (not\n          (at player shed)\n        )\n        (not\n          (= mine shed)\n        )\n      )\n    :effect\n      (and\n        (at player shed)\n        (not\n          (at player mine)\n        )\n      )\n  )", "name": "(move-to player mine shed)"}, {"action": "  (:action store\n    :parameters (player pickaxe shed)\n    :precondition\n      (and\n        (at player shed)\n        (has player pickaxe)\n      )\n    :effect\n      (and\n        (has shed pickaxe)\n        (not\n          (has player pickaxe)\n        )\n      )\n  )", "name": "(store player pickaxe shed)"}, {"action": "  (:action move-to\n    :parameters (player shed furnace)\n    :precondition\n      (and\n        (at player shed)\n        (not\n          (at player furnace)\n        )\n        (not\n          (= shed furnace)\n        )\n      )\n    :effect\n      (and\n        (at player furnace)\n        (not\n          (at player shed)\n        )\n      )\n  )", "name": "(move-to player shed furnace)"}, {"action": "  (:action smelt-ore\n    :parameters (player furnace ore bars)\n    :precondition\n      (and\n        (at player furnace)\n        (has player ore)\n      )\n    :effect\n      (and\n        (has player bars)\n        (not\n          (has player ore)\n        )\n      )\n  )", "name": "(smelt-ore player furnace ore bars)"}, {"action": "  (:action move-to\n    :parameters (player furnace shed)\n    :precondition\n      (and\n        (at player furnace)\n        (not\n          (at player shed)\n        )\n        (not\n          (= furnace shed)\n        )\n      )\n    :effect\n      (and\n        (at player shed)\n        (not\n          (at player furnace)\n        )\n      )\n  )", "name": "(move-to player furnace shed)"}, {"action": "  (:action equip\n    :parameters (player axe shed)\n    :precondition\n      (and\n        (at player shed)\n        (forall (?t - tool)\n          (not\n            (has player ?t)\n          )\n        )\n        (has shed axe)\n      )\n    :effect\n      (and\n        (has player axe)\n      )\n  )", "name": "(equip player axe shed)"}, {"action": "  (:action store\n    :parameters (player feathers shed)\n    :precondition\n      (and\n        (at player shed)\n        (has player feathers)\n      )\n    :effect\n      (and\n        (has shed feathers)\n        (not\n          (has player feathers)\n        )\n      )\n  )", "name": "(store player feathers shed)"}, {"action": "  (:action move-to\n    :parameters (player shed mine)\n    :precondition\n      (and\n        (at player shed)\n        (not\n          (at player mine)\n        )\n        (not\n          (= shed mine)\n        )\n      )\n    :effect\n      (and\n        (at player mine)\n        (not\n          (at player shed)\n        )\n      )\n  )", "name": "(move-to player shed mine)"}, {"action": "  (:action move-to\n    :parameters (player mine forest)\n    :precondition\n      (and\n        (at player mine)\n        (not\n          (at player forest)\n        )\n        (not\n          (= mine forest)\n        )\n      )\n    :effect\n      (and\n        (at player forest)\n        (not\n          (at player mine)\n        )\n      )\n  )", "name": "(move-to player mine forest)"}, {"action": "  (:action chop-trees\n    :parameters (player forest axe trees wood)\n    :precondition\n      (and\n        (at player forest)\n        (has player axe)\n        (has forest trees)\n      )\n    :effect\n      (and\n        (has player wood)\n      )\n  )", "name": "(chop-trees player forest axe trees wood)"}, {"action": "  (:action move-to\n    :parameters (player forest shed)\n    :precondition\n      (and\n        (at player forest)\n        (not\n          (at player shed)\n        )\n        (not\n          (= forest shed)\n        )\n      )\n    :effect\n      (and\n        (at player shed)\n        (not\n          (at player forest)\n        )\n      )\n  )", "name": "(move-to player forest shed)"}, {"action": "  (:action store\n    :parameters (player axe shed)\n    :precondition\n      (and\n        (at player shed)\n        (has player axe)\n      )\n    :effect\n      (and\n        (has shed axe)\n        (not\n          (has player axe)\n        )\n      )\n  )", "name": "(store player axe shed)"}, {"action": "  (:action equip\n    :parameters (player hammer shed)\n    :precondition\n      (and\n        (at player shed)\n        (forall (?t - tool)\n          (not\n            (has player ?t)\n          )\n        )\n        (has shed hammer)\n      )\n    :effect\n      (and\n        (has player hammer)\n      )\n  )", "name": "(equip player hammer shed)"}, {"action": "  (:action fletch-shafts\n    :parameters (player knife wood shafts)\n    :precondition\n      (and\n        (has player wood)\n      )\n    :effect\n      (and\n        (has player shafts)\n        (not\n          (has player wood)\n        )\n      )\n  )", "name": "(fletch-shafts player knife wood shafts)"}, {"action": "  (:action affix\n    :parameters (player arrow shafts)\n    :precondition\n      (and\n        (has player shafts)\n      )\n    :effect\n      (and\n        (includes arrow shafts)\n        (not\n          (has player shafts)\n        )\n        (when\n          (and\n            (exists ?a includes)\n            (exists ?f includes)\n            (exists ?s includes)\n          )\n          (and\n            (has player arrow)\n          )\n        )\n      )\n  )", "name": "(affix player arrow shafts)"}, {"action": "  (:action move-to\n    :parameters (player shed anvil)\n    :precondition\n      (and\n        (at player shed)\n        (not\n          (at player anvil)\n        )\n        (not\n          (= shed anvil)\n        )\n      )\n    :effect\n      (and\n        (at player anvil)\n        (not\n          (at player shed)\n        )\n      )\n  )", "name": "(move-to player shed anvil)"}, {"action": "  (:action smithe-bars\n    :parameters (player anvil hammer bars arrowhead)\n    :precondition\n      (and\n        (at player anvil)\n        (has player bars)\n        (has player hammer)\n      )\n    :effect\n      (and\n        (has player arrowhead)\n        (not\n          (has player bars)\n        )\n      )\n  )", "name": "(smithe-bars player anvil hammer bars arrowhead)"}, {"action": "  (:action move-to\n    :parameters (player anvil shed)\n    :precondition\n      (and\n        (at player anvil)\n        (not\n          (at player shed)\n        )\n        (not\n          (= anvil shed)\n        )\n      )\n    :effect\n      (and\n        (at player shed)\n        (not\n          (at player anvil)\n        )\n      )\n  )", "name": "(move-to player anvil shed)"}, {"action": "  (:action store\n    :parameters (player hammer shed)\n    :precondition\n      (and\n        (at player shed)\n        (has player hammer)\n      )\n    :effect\n      (and\n        (has shed hammer)\n        (not\n          (has player hammer)\n        )\n      )\n  )", "name": "(store player hammer shed)"}, {"action": "  (:action affix\n    :parameters (player arrow arrowhead)\n    :precondition\n      (and\n        (has player arrowhead)\n      )\n    :effect\n      (and\n        (includes arrow arrowhead)\n        (not\n          (has player arrowhead)\n        )\n        (when\n          (and\n            (exists ?a includes)\n            (exists ?f includes)\n            (exists ?s includes)\n          )\n          (and\n            (has player arrow)\n          )\n        )\n      )\n  )", "name": "(affix player arrow arrowhead)"}, {"action": "  (:action hunt-chicken\n    :parameters (player farm chickens feathers)\n    :precondition\n      (and\n        (has farm chickens)\n      )\n    :effect\n      (and\n        (has player feathers)\n      )\n  )", "name": "(hunt-chicken player farm chickens feathers)"}, {"action": "  (:action affix\n    :parameters (player arrow feathers)\n    :precondition\n      (and\n        (has player feathers)\n      )\n    :effect\n      (and\n        (includes arrow feathers)\n        (not\n          (has player feathers)\n        )\n        (when\n          (and\n            (exists ?a includes)\n            (exists ?f includes)\n            (exists ?s includes)\n          )\n          (and\n            (has player arrow)\n          )\n        )\n      )\n  )", "name": "(affix player arrow feathers)"}, {"action": "  (:action store\n    :parameters (player arrow shed)\n    :precondition\n      (and\n        (at player shed)\n        (has player arrow)\n      )\n    :effect\n      (and\n        (has shed arrow)\n        (not\n          (has player arrow)\n        )\n      )\n  )", "name": "(store player arrow shed)"}], "planPath": "/tmp/solver_planning_domains_tmp_28q3VY2UNc2dS/plan", "logPath": "/tmp/solver_planning_domains_tmp_28q3VY2UNc2dS/log"}}