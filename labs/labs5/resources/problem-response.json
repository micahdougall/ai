{"status": "ok", "result": {"output": " --- OK.\n Match tree built with 8244 nodes.\n\nPDDL problem description loaded: \n\tDomain: LANDROVER\n\tProblem: CAR_BUILD\n\t#Actions: 8244\n\t#Fluents: 44\nLandmarks found: 2\nStarting search with IW (time budget is 60 secs)...\nrel_plan size: 6\n#RP_fluents 6\nCaption\n{#goals, #UNnachieved,  #Achieved} -> IW(max_w)\n\n{2/2/0}:IW(1) -> [2][3][4]rel_plan size: 3\n#RP_fluents 3\n{2/1/1}:IW(1) -> [2][3][4]rel_plan size: 0\n#RP_fluents 0Plan found with cost: 6\nTotal time: 0.036\nNodes generated during search: 70\nNodes expanded during search: 50\nIW search completed\n", "parseStatus": "ok", "error": null, "type": "full", "length": 6, "plan": [{"action": "  (:action attach-wheels\n    :parameters (wheel8 wheel3 wheel2 wheel1 discovery)\n    :precondition\n      (and\n        (forall (?a - car)\n          (not\n            (is_attached wheel8 ?a)\n          )\n        )\n        (forall (?a - car)\n          (not\n            (is_attached wheel3 ?a)\n          )\n        )\n        (forall (?a - car)\n          (not\n            (is_attached wheel2 ?a)\n          )\n        )\n        (forall (?a - car)\n          (not\n            (is_attached wheel1 ?a)\n          )\n        )\n      )\n    :effect\n      (and\n        (is_attached wheel8 discovery)\n        (is_attached wheel3 discovery)\n        (is_attached wheel2 discovery)\n        (is_attached wheel1 discovery)\n      )\n  )", "name": "(attach-wheels wheel8 wheel3 wheel2 wheel1 discovery)"}, {"action": "  (:action attach\n    :parameters (engine1 discovery)\n    :precondition\n      (and\n        (forall (?a - car)\n          (not\n            (is_attached engine1 ?a)\n          )\n        )\n      )\n    :effect\n      (and\n        (is_attached engine1 discovery)\n      )\n  )", "name": "(attach engine1 discovery)"}, {"action": "  (:action inspect\n    :parameters (discovery)\n    :precondition\n      (and\n        (exists ?e is_attached)\n        (exists ?w is_attached)\n        (not\n          (is_inspected discovery)\n        )\n      )\n    :effect\n      (and\n        (is_inspected discovery)\n      )\n  )", "name": "(inspect discovery)"}, {"action": "  (:action attach-wheels\n    :parameters (wheel7 wheel6 wheel5 wheel4 rangerover)\n    :precondition\n      (and\n        (forall (?a - car)\n          (not\n            (is_attached wheel7 ?a)\n          )\n        )\n        (forall (?a - car)\n          (not\n            (is_attached wheel6 ?a)\n          )\n        )\n        (forall (?a - car)\n          (not\n            (is_attached wheel5 ?a)\n          )\n        )\n        (forall (?a - car)\n          (not\n            (is_attached wheel4 ?a)\n          )\n        )\n      )\n    :effect\n      (and\n        (is_attached wheel7 rangerover)\n        (is_attached wheel6 rangerover)\n        (is_attached wheel5 rangerover)\n        (is_attached wheel4 rangerover)\n      )\n  )", "name": "(attach-wheels wheel7 wheel6 wheel5 wheel4 rangerover)"}, {"action": "  (:action attach\n    :parameters (engine2 rangerover)\n    :precondition\n      (and\n        (forall (?a - car)\n          (not\n            (is_attached engine2 ?a)\n          )\n        )\n      )\n    :effect\n      (and\n        (is_attached engine2 rangerover)\n      )\n  )", "name": "(attach engine2 rangerover)"}, {"action": "  (:action inspect\n    :parameters (rangerover)\n    :precondition\n      (and\n        (exists ?e is_attached)\n        (exists ?w is_attached)\n        (not\n          (is_inspected rangerover)\n        )\n      )\n    :effect\n      (and\n        (is_inspected rangerover)\n      )\n  )", "name": "(inspect rangerover)"}], "cost": null, "valStdout": null, "valStderr": null, "valStatus": null, "planPath": "/tmp/solver_planning_domains_tmp_25KDsAwdJ16PL/plan", "logPath": "/tmp/solver_planning_domains_tmp_25KDsAwdJ16PL/log"}, "valid": true}